library(shiny)
library(readr)
runApp('LetterRPA')
runApp('LetterRPA')
sentences_df = read_csv("./sentences.csv")
View(sentences_df)
sentences_df = read_csv("./sentences.csv")
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
tags = paste(sentences_df$Tags)
tags = paste(unlist(sentences_df$Tags))
tags = paste(list(sentences_df$Tags))
tags = paste(sentences_df$Tags
tags = paste(sentences_df$Tags)
?paste
tags = paste(sentences_df$Tags, collapse = TRUE)
tags = paste(sentences_df$Tags, collapse = TRUE)
View(sentences_df)
tags = paste(sentences_df$Tags, collapse = "")
tags = paste(sentences_df$Tags, collapse = " ")
tags = paste(sentences_df$Tags, collapse = " ") %>%
str_split()
library(dplyr)
tags = paste(sentences_df$Tags, collapse = " ") %>%
str_split()
library(stringr)
tags = paste(sentences_df$Tags, collapse = " ") %>%
str_split()
tags = paste(sentences_df$Tags, collapse = " ") %>%
str_split(" ")
tags = paste(sentences_df$Tags, collapse = " ") %>%
str_split(" ") %>%
unique()
tags = paste(sentences_df$Tags, collapse = " ") %>%
str_split(" ") %>%
as.vector() %>%
unique()
tags = paste(sentences_df$Tags, collapse = " ") %>%
str_split(" ") %>%
unlist() %>%
unique()
?vapply(list, function, FUN.VALUE = type, ...)
?vapply
"5" %in% "12345"
"5" %in% "5"
"5" in "12345"
"5" %in% "12345"
str_detect("124", "4")
?none
?any
?all
runApp('LetterRPA')
runApp('LetterRPA')
filter_tag(c("Opening", c()))
filter_tag = function(includes, excludes){
sentences_df %>% filter(
(sapply(includes, function(x){ str_detect(Tag, x) }) %>% any()) &
(sapply(excludes, function(x){ !str_detect(Tag, x) }) %>% all())
)
}
filter_tag(c("Opening", c()))
?filter
sentences_df %>% filter(
(sapply(includes, function(x){ str_detect(Tag, x) }) %>% any()) &
(sapply(excludes, function(x){ !str_detect(Tag, x) }) %>% all())
)
filter_tag = function(includes, excludes){
sentences_df %>% filter(
(sapply(includes, function(x){ str_detect(Tag, x) }) %>% any()) &
(sapply(excludes, function(x){ !str_detect(Tag, x) }) %>% all())
)
}
filter_tag(c("Opening"), c())
filter_tag(c("Opening), c())
)
)
""
)
)
)
")
filter_tag(c(), c())
filter_tag(c("Opening"), c())
filter_tag = function(includes, excludes){
sentences_df %>% filter(
(sapply(includes, function(x){ str_detect(Tags, x) }) %>% any()) &
(sapply(excludes, function(x){ !str_detect(Tags, x) }) %>% all())
)
}
filter_tag(c("Opening"), c())
filter_tag(c("Opening"), c("Organization"))
filter_tag(c("Opening"), c("Organization"))
filter_tag(c("Opening"), c())
sentences_df %>% filter(
sapply(includes, function(x){ str_detect(Tags, x) }) &
sapply(excludes, function(x){ !str_detect(Tags, x) })
)
filter_tag = function(includes, excludes){
sentences_df %>% filter(
sapply(includes, function(x){ str_detect(Tags, x) }) &
sapply(excludes, function(x){ !str_detect(Tags, x) })
)
}
filter_tag(c("Opening"), c())
?or
?any
filter_tag = function(includes, excludes){
sentences_df %>% filter(
any(sapply(includes, function(x){ str_detect(Tags, x) })) &
! all(sapply(excludes, function(x){ !str_detect(Tags, x) }))
)
}
filter_tag(c("Opening"), c())
filter_tag = function(includes, excludes){
sentences_df %>% filter(
any(sapply(includes, function(x){ str_detect(Tags, x) })) &
all(sapply(excludes, function(x){ !str_detect(Tags, x) }))
)
}
filter_tag(c("Opening"), c())
?filter
filter_tag(c("Opening"), c("Fit"))
sentences_df %>% filter(
sapply(includes, function(x){ str_detect(Tags, x) }) &
sapply(excludes, function(x){ !str_detect(Tags, x) })
)
filter_tag = function(includes, excludes){
sentences_df %>% filter(
sapply(includes, function(x){ str_detect(Tags, x) }) &
sapply(excludes, function(x){ !str_detect(Tags, x) })
)
}
filter_tag(c("Opening"), c("Fit"))
filter_tag(c("Opening"), c())
filter_tag(c("Opening"), NULL)
filter_tag(c("Opening"), NA)
filter_tag(c("Opening"), c(""))
filter_tag(c("Opening"), c("Fit"))
filter_tag(c("Opening"), c("A"))
filter_tag = function(includes, excludes = c("foobar")){
sentences_df %>% filter(
sapply(includes, function(x){ str_detect(Tags, x) }) &
sapply(excludes, function(x){ !str_detect(Tags, x) })
)
}
filter_tag(c("Opening"), c())
filter_tag = function(includes, excludes){
if(length(excludes) == 1){
excludes = c("foobar")
}
sentences_df %>% filter(
sapply(includes, function(x){ str_detect(Tags, x) }) &
sapply(excludes, function(x){ !str_detect(Tags, x) })
)
}
filter_tag(c("Opening"), c())
filter_tag = function(includes, excludes){
if(length(excludes) < 1){
excludes = c("foobar")
}
sentences_df %>% filter(
sapply(includes, function(x){ str_detect(Tags, x) }) &
sapply(excludes, function(x){ !str_detect(Tags, x) })
)
}
filter_tag(c("Opening"), c())
filter_tag(c("Opening"), c("Organization"))
runApp('LetterRPA')
runApp('LetterRPA')
?checkboxGroupInput
runApp('LetterRPA')
tags = paste(sentences_df$Tags, collapse = " ") %>%
str_split(" ") %>%
unlist() %>%
unique() %>%
sort()
runApp('LetterRPA')
sentences_df = read_csv("./sentences.csv")
tags = paste(sentences_df$Tags, collapse = " ") %>%
str_split(" ") %>%
unlist() %>%
unique() %>%
sort()
filter_tag = function(includes, excludes){
if(length(excludes) < 1){
excludes = c("foobar")
}
sentences_df %>% filter(
sapply(includes, function(x){ str_detect(Tags, x) }) &
sapply(excludes, function(x){ !str_detect(Tags, x) })
)
}
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
output$sentences = renderDataTable(
filter_tag(input$includes, input$excludes),
options = list(
pageLength = 20
)
)
runApp('LetterRPA')
runApp('LetterRPA')
output$sentences = renderDataTable(
{filter_tag(input$includes, input$excludes)}
)
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
filter_tag(c("Opening"), c())
filter_tag(c("Opening"), c()) %>% data.frame()
filter_tag(c("Opening"), c()) %>% data.frame() %>% renderDataTable
filter_tag(c("Opening"), c()) %>% data.frame() %>% renderDataTable()
filter_tag(c("Opening"), c()) %>% data.frame() %>% renderDataTable() %>% tableOuput()
runApp('LetterRPA')
?box
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
?renderDataTable
?dataTableOutput
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
runApp('LetterRPA')
